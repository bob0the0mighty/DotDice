name: Publish to NuGet

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  pack-and-publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check for v-tag signal artifact via API
        id: check_v_tag_via_api
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = ${{ github.event.workflow_run.id }};
            const artifactName = 'v-tag-signal-artifact';
            core.setOutput('is_v_tag', 'false');

            try {
              const response = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: runId,
              });

              const targetArtifact = response.data.artifacts.find(art => art.name === artifactName);

              if (targetArtifact) {
                core.info(`Signal artifact '${artifactName}' (ID: ${targetArtifact.id}) WAS listed by the API for run ID ${runId}. Proceeding with publish.`);
                core.setOutput('is_v_tag', 'true');
              } else {
                core.info(`Signal artifact '${artifactName}' was NOT listed by the API for run ID ${runId}. Skipping publish.`);
              }
            } catch (error) {
              core.error(`Error listing artifacts for run ID ${runId}: ${error.message}`);
            }

      - name: Checkout repository
        if: steps.check_v_tag_via_api.outputs.is_v_tag == 'true'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup .NET
        if: steps.check_v_tag_via_api.outputs.is_v_tag == 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Pack
        if: steps.check_v_tag_via_api.outputs.is_v_tag == 'true'
        run: dotnet pack ./DotDice/DotDice.csproj -c Release -o .

      - name: Push to NuGet
        if: steps.check_v_tag_via_api.outputs.is_v_tag == 'true'
        run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}